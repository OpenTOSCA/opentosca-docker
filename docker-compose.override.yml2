version: '3'
services:
  # container:
  #   environment:
  #     CONTAINER_REPOSITORY_HOSTNAME: container-repository
  #     CONTAINER_REPOSITORY_PORT: 8080
  #   # save the imported CSARs and generated files locally on the host system
  #   volumes:
  #    - <path on ohost system>:/tmp/opentosca
  # # Additional winery service to be used during management feature enrichment.
  # # Use together with lines 3 to 6.
  # container-repository:
  #   image: opentosca/winery:latest
  #   environment:
  #     WINERY_PORT: 8091
  #     WORKFLOWMODELER_PORT: 8091
  #     TOPOLOGYMODELER_PORT: 8091
  #     WINERY_HOSTNAME: ${PUBLIC_HOSTNAME}
  #     WORKFLOWMODELER_HOSTNAME: ${PUBLIC_HOSTNAME}
  #     TOPOLOGYMODELER_HOSTNAME: ${PUBLIC_HOSTNAME}
  #     CONTAINER_HOSTNAME: ${PUBLIC_HOSTNAME}
  #   ports:
  #     - '8091:8080'
  #   networks:
  #     - opentosca
  winery:
    environment:
      WINERY_REPOSITORY_PATH: /var/opentosca/repository
      WINERY_REPOSITORY_URL: https://github.com/OpenTOSCA/tosca-definitions-example-applications
    # # use a modeling repository that is stored on the host system
    # volumes:
    #   - <path on host system>:/var/opentosca/repository
    # # e.g., - C:\tosca-definitions\tosca-definitions-qc-applications:/var/openstosca/repository
  dind:
    volumes:
      # Enable University of Stuttgart internal DNS settings via corresponding config file
      - ./resolv.conf:/etc/resolv.conf
    # map the default MySQL port for testing purposes
    ports: 
      - '3306:3306'
