user nginx;
pcre_jit on;
pid /run/nginx.pid;
worker_processes auto;
include /etc/nginx/modules/*.conf;

events {
  worker_connections 1024;
}

http {
  log_format main '$remote_addr - $remote_user [$time_local] '
    '"$request" $status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /dev/stdout main;
  error_log /dev/stderr warn;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  gzip on;
  gzip_vary on;
  gzip_static on;

  sendfile on;
  tcp_nodelay on;
  tcp_nopush on;

  proxy_buffering off;
  proxy_request_buffering off;
  proxy_max_temp_file_size 0;

  resolver 127.0.0.1;
  keepalive_timeout 65;
  client_max_body_size 0;

  server {
    server_name _;
    listen 80 default_server;

    set $ui 'ui:8080';
    set $api 'container:1337';
    set $winery 'winery:8080';
    set $tomcat 'engine-ia-jdk8:8080/manager';
    set $ode 'engine-plan-bpel:9763/ode';

    sub_filter_types *;
    sub_filter_once off;

    location / {
      proxy_pass http://$ui;
      proxy_redirect http://$ui http://$host;
    }

    location ~ ^/(ui|winery|ode|manager)$ {
      return 302 $uri/;
    }

    location /ui {
      rewrite ^ $request_uri;
      rewrite ^/ui(/.*)$ $1 break;
      sub_filter '/assets' './assets';
      sub_filter '<base href="/">' '<base href="./">';
      proxy_pass http://$ui$uri;
      proxy_redirect http://$ui http://$host/ui;
    }

    location /winery {
      rewrite ^ $request_uri;
      rewrite ^/winery(/.*)$ $1 break;
      proxy_pass http://$winery$uri;
      proxy_redirect http://$winery http://$host/winery;
      sub_filter '/winery' '/winery/winery';

      location ~ ^/winery/winery/git$ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_pass http://$winery/winery/git;
      }
    }

    location /ode {
      rewrite ^ $request_uri;
      rewrite ^/ode(/.*)$ $1 break;
      proxy_pass http://$ode$uri;
      proxy_redirect http://$ode http://$host/ode;
    }

    location /manager {
      rewrite ^ $request_uri;
      rewrite ^/manager(/.*)$ $1 break;
      proxy_pass http://$tomcat$uri;
      proxy_redirect http://$tomcat http://$host/manager;
    }
  }
}
